Font handling in troff with PostScript devices
==============================================

The basics
----------

Heirloom troff understands two ways to select PostScript fonts.

The old ditroff method requires font tables to be generated manually.
This tedious process is described in "troff/troff.d/font/README". It
is not recommended anymore that this is done for adding fonts, but it
is still the default method to select fonts from the PostScript base
font set. All one- or two character file names in the font directory
(usually /usr/ucblib/doctools/font/devpost) represent fonts that can
be used with the ".fp" and ".ft" requests.

The new method can access PostScript font files directly. It is only
available with "troff -x". A new request is available to handle fonts
with this method:

    .fpost r yy basename [pfb|pfa|t42]
      reads metrics from the file "fontdir/afm/basename.afm". The font
      is then available with ".ft yy", "\f(yy", etc.; "yy" may be the
      name of an existing ditroff-style font, such as "R", or may be
      freely chosen. The "r" argument specifies a register on which
      the font is to be mounted; if it is zero or too large, the font
      is mounted on a free position. Contrasting to the ".fp" request,
      the "r" argument may consist of more than a single digit. If
      the optional "pfb|pfa|t42" argument is present, data from the
      file "fontdir/pfb/basename.pfb" (or pfa/t42, respectively) is
      included into the generated PostScript. This is useful to
      include fonts that have not yet been downloaded into the
      printer, or for generating PDFs with additional fonts.

As an example,
      
      .fpost 0 VA van_____ pfb
      .ft VA
      Here is some text in Monotype Van Dijck Regular.

Making new fonts available is easy with this method. If you buy a
PostScript Type 1 font for use with troff, select the Windows version.
You will get a set of files from your vendor. Only two of them are of
interest for troff:

    xxxxxxxx.afm
      This is the metrics file. troff accesses it to learn the widths
      of characters in the font. Put this file (or a symbolic link to
      it) into the directory /usr/ucblib/doctools/font/devpost/afm.

    xxxxxxxx.pfb
      This file contains the actual glyph data. troff does not really
      need this file, but your printer or PDF converter does. In many
      cases, it is most convenient to include the data directly into
      the .ps file generated. Put the file into the troff font directory
      /usr/ucblib/doctools/font/devpost/pfb.

For TrueType fonts, an additional conversion step is necessary. troff
cannot handle TrueType fonts directly, but it can handle PostScript
Type 42 fonts, which are a special representation of them. You can
use the "ttftot42" utility from <http://www.nih.at/ttftot42/> to
generate a Type 42 font from a TrueType font. It will produce a .afm
file, which you need to put into /usr/ucblib/doctools/font/devpost/afm
as for a Type 1 font, and a .t42 file, which troff expects to find in
/usr/ucblib/doctools/font/devpost/t42. You can then use the Type 42
font just like a Type 1 font. The only drawback with this is that a
Type 42 font requires special support from the PostScript interpreter;
an aging printer may not be able to process them.


Replacing the default ditroff fonts with AFM fonts
--------------------------------------------------

The old ditroff fonts do not contain information about international
characters etc. Many of the extended features thus cannot be used with
them. If possible, they should thus be replaced by AFM equivalents.
With the Adobe fonts, it looks like this (note that your terminal and
text editor/viewer must support UTF-8 for viewing the text of example):

	.fpost 1 R tir_____
	.fpost 2 I tii_____
	.fpost 3 B tib_____
	.fpost 4 BI tibi____
	.fpost 10 S sy______
	.lc_ctype de_DE.utf8
	Deutscher Text mit „Anführungszeichen“
	.sp
	The first five small letters of the Greek alphabet: α β γ δ ε

All of these are PostScript and PDF base fonts, so it is usually not
necessary to include the glyph data for them, and the fourth argument
to the .fpost request can be omitted.

Many troff documents refer to the first three fonts by register rather
than by name. It is thus recommended that the base fonts of a document
are mounted explicitly on these places. The same applies to the Symbol
font, which should always be mounted on register number ten.


Using fonts with old style numerals
-----------------------------------

A font with old style numerals but otherwise standard characters usually
does not require any special mechanism. It can simply be mounted, selected,
and used.


Using fonts with small capital letters
--------------------------------------

Small capital fonts normally need letter space tracking. Thus e.g.
to use the Stempel Garamond small capital font, write something like

	.fpost 0 SC gsrsc___ pfb
	.tkf SC 1 .2 24 2
	.ft SC
	This text prints in Small Capitals.


Using a combination of expert and standard fonts for small capitals
-------------------------------------------------------------------

An expert font contains small capital letters but no upper-case capital
letters. Since it would be very inconvenient to change the font
explicitly for each upper-case letter, the fallback sequence is useful
in this case. The expert font is selected as text font, but for each
upper-case letter encountered, troff changes automatically to the
standard font. An example with the Monotype Fournier type:

	.fpost 1 R fn______ pfb
	.fpost 0 E fny_____ pfb
	.tkf E 1 .2 24 2
	.fallback E R
	.ft E
	This text prints in Small Capitals.


Using a combination of expert and standard fonts for old style numerals
-----------------------------------------------------------------------

This also uses the fallback sequence, but since the standard numerals
are present in the standard font, they have to be hidden first so that
troff does not select them:

	.fpost 1 R fn______ pfb
	.fpost 0 E fny_____ pfb
	.fallback R E
	.hidechar R 0123456789
	The numerals 0 1 2 3 4 5 6 7 8 9 are in old style.


Using the expert font for both small capitals and old style numerals
--------------------------------------------------------------------

The examples above can also be combined. Since the .tkf request does not
affect the tracking of fonts that are selected by the fallback sequence,
it is sufficient to mount each font once:

	.fpost 1 R fn______ pfb
	.fpost 0 E fny_____ pfb
	.fallback R E
	.fallback E R
	.tkf E 1 .2 24 2
	.hidechar R 0123456789
	The numerals 0 1 2 3 4 5 6 7 8 9 are in old style.
	.br
	.ft E
	But this text prints in Small Capitals.


Gunnar Ritter                                                 8/20/05
