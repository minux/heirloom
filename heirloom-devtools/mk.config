#
# A BSD-compatible install command.
#
INSTALL=/usr/ucb/install

#
# Where to place binaries.
#
BINDIR=/usr/ccs/bin

#
# Where to place additional binaries that aim at POSIX conformance.
#
SUSBIN=/usr/5bin/posix

#
# Where to place libraries.
#
LIBDIR=/usr/ccs/lib

#
# Where to place manual pages.
#
MANDIR=/usr/ccs/share/man

#
# Binaries are stripped with this command after installation.
#
STRIP=strip -s -R .comment -R .note

#
# Compiler flags.
#
CFLAGS=-O -fomit-frame-pointer

#
# C preprocessor flags.
#
# Use -D_GNU_SOURCE for Linux with GNU libc.
# Use -D_INCLUDE__STDC_A1_SOURCE for HP-UX.
#
CPPFLAGS=-D_GNU_SOURCE -D_FORTIFY_SOURCE=1 -D__NO_STRING_INLINES

#
# Warning flags for the compiler.
#
WERROR=-Werror
WARN = -Wchar-subscripts -Wformat -Wno-format-y2k -Wimplicit \
	-Wmissing-braces -Wsequence-point -Wreturn-type -Wtrigraphs \
	-Wunused-function -Wunused-label -Wunused-variable -Wunused-value \
	-Wuninitialized -Wmultichar -Wpointer-arith -Wno-missing-braces \
	-Wdeclaration-after-statement -Wstrict-prototypes $(WERROR)
#WARN=

#
# Linker flags.
#
LDFLAGS=

#
# Additional libraries to link with.
#
LIBS=

#
# It may be necessary to define AR on some systems, e.g. on HP-UX.
#
#AR=ar

#
# Run ranlib if it is in the current path. This should take care
# of most situations. On Mac OS X, you need to uncomment "ranlib -c".
#
RANLIB=(hash ranlib) >/dev/null 2>&1 || exit 0; ranlib
#RANLIB=ranlib -c

#
# Use the generated yacc to process .y files. You can set this to another
# value for cross-compiling.
#
YACC=`test -x ../yacc/yacc && echo ../yacc/yacc -P../yacc/yaccpar || echo yacc`

#
# Use this if you prefer hard links between installed files.
#
LNS = ln -s
