.\"
.\" Changes by Gunnar Ritter, Freiburg i. Br., Germany, February 2007.
.\"
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowedgement:
.\" 	This product includes software developed by the University of
.\" 	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	from 4.3BSD-Tahoe sccs.1	2.5 (Berkeley) 5/12/86
.\"
.\" Sccsid @(#)sccs.1b	1.8 (gritter) 2/17/07
.\"
.\" SCCS 1 "May 12, 1986"
.TH SCCS 1B "2/17/07" "Heirloom Development Tools" "BSD System Compatibility"
.SH NAME
sccs \- (BSD) front end for the Source Code Control System (\s-1SCCS\s0)
.SH SYNOPSIS
.HP
.ad l
.nh
\fBsccs\fR
[\fB\-rR\fR]
[\fB\-d\fIprefixpath\fR]
[\fB\-p\fIfinalpath\fR]
\fIcommand\fR
[\fIflags\fR]
[\fIargs\fR]
.br
.ad b
.hy 1
.hw admin
.SH DESCRIPTION
.I sccs
is a front end
to the
.SM SCCS
programs.
Basically,
.I sccs
runs the
.I command
with the specified
.I flags
and
.I args.
Each
argument
is normally modified to be prepended
with
.RB ` SCCS/s. '.
Flags to be interpreted by the
.I sccs
program must be before the
.I command
argument.
Flags to be passed to the actual
.SM SCCS
program
must come after the
.I command
argument.
These flags are specific to the command
and are discussed in the documentation for that command.
.I sccs
also includes the capability to run
``set user id'' to another user
to provide additional protection.
Certain commands (such as
.IR admin )
cannot be run ``set user id'' by all users,
since this would allow anyone to change the authorizations.
These commands are always run as the real user.
.SH OPTIONS
.TP
.B \-r
Runs
.I sccs
as the real user
rather than as whatever effective user
.I sccs
is ``set user id'' to.
.TP
.B \-R
Operate recursively on all subdirectories
of all file arguments.
If no file argument is given,
operation starts in the current directory.
For sub-commands involving edited files,
this implies that all s.files
inside
.BI ` SCCS '
directories
for which a p.file exists
are processed in their respective directories.
For the other sub-commands,
this implies that all s.files
inside
.BI ` SCCS '
directories
are processed.
This option is an extension.
.TP
\fB\-d\fIprefixpath\fR
Gives a root directory for the
.SM SCCS
files.
The default is the current directory.
.IP
Also, if the environment variable
PROJECTDIR
is set,
its value is used to determine the
.I \-d
flag.
.TP
\fB\-p\fIfinalpath\fR
Defines the pathname of the directory
in which the
.SM SCCS
files will be found;
.RB ` SCCS '
is the default.
The
.B \-p
flag differs from the
.B \-d
flag in that the
.B \-d
argument is prepended to the entire pathname
and the
.B \-p
argument is inserted before the final component of the
pathname.
For example,
.RB ` "sccs \-d/x \-py get a/b" '
will convert to
.RB ` "get /x/a/y/s.b" '.
The intent here is to create aliases such as
.RB ` "alias syssccs sccs -d/usr/src" '
which will be used as
.RB ` "syssccs get cmd/who.c" '.
.SH USAGE
Besides the usual
.SM SCCS
commands,
several ``pseudo-commands'' can be issued.
These are:
.TP 1i
.B create
Creates an
.SM SCCS
file,
taking the initial contents from the file of the same name.
Any flags to
.B admin
are accepted.
If the creation is successful,
the files are renamed with a comma on the front.
These should be removed when you are convinced that
the
.SM SCCS
files have been created successfully.
.TP
.B edit
Equivalent to
.RB ` "get \-e" '.
.TP
.B delget
Perform a delta on the named files
and then get new versions.
The new versions will have id keywords expanded,
and will not be editable.
The
.BR \-m ,
.BR \-p ,
.BR \-r ,
.BR \-s ,
and
.B \-y
flags
will be passed to delta,
and the
.BR \-b ,
.BR \-c ,
.BR \-e ,
.BR \-i ,
.BR \-k ,
.BR \-l ,
.BR \-s ,
and
.B \-x
flags
will be passed to get.
.TP
.B deledit
Equivalent to 
.B delget
except that the
.B get
phase includes the
.B \-e
flag.
This option is useful for making a ``checkpoint''
of your current editing phase.
The same flags will be passed to delta
as described above,
and all the flags listed for
.B get
above except
.B \-e
and
.B \-k
are passed to
.BR edit .
.TP
.B fix
Must be followed by a
.B \-r
flag.
This command essentially removes the named delta,
but leaves you with a copy of the delta
with the changes that were in it.
It is useful for fixing small compiler bugs, etc.
Since it doesn't leave audit trails,
it should be used carefully.
.TP
.B clean
This routine removes everything from the current directory
that can be recreated from SCCS files.
It will not remove any files being edited.
If the
.B \-b
flag is given, branches are ignored in the determination
of whether they are being edited;
this is dangerous if you are keeping the branches in the
same directory.
.TP
.B unedit
This is the opposite of an
.B edit
or a
.RB ` "get \-e" '.
It should be used with extreme caution,
since any changes you made since the get
will be irretrievably lost.
.TP
.B info
Gives a listing of all files being edited.
If the
.B \-b
flag is given,
branches (i.e.,
\s-1SID\s0's with two or fewer components)
are ignored.
If the
.B \-u
flag is given
(with an optional argument)
then only files being edited by you
(or the named user)
are listed.
.TP
.B check
Like 
.B info
except that nothing is printed if nothing is being edited,
and a non-zero exit status is returned if anything
is being edited.
The intent is to have this included in an ``install''
entry in a makefile
to insure that everything is included into the
.SM SCCS
file
before a version is installed.
.TP
.B tell
Gives a newline-separated list
of the files being edited
on the standard output.
Takes the
.B \-b
and
.B \-u
flags like 
.B info
and
.BR check .
.TP
.B diffs
Gives a ``diff'' listing between the current version of the
program(s) you have out for editing and the versions
in
.SM SCCS
format.
The
.B \-r,
.B \-c,
.B \-i,
.B \-x,
and
.B \-t
flags are passed to
.BR get ;
the
.B \-l,
.B \-s,
.B \-e,
.B \-f,
.B \-h,
.B \-u,
.B \-a,
.B \-p,
.B \-B,
and
.B \-b
options are passed to
.B diff.
The
.B \-C
flag is passed to
.B diff
as
.B \-c.
.TP
.B print
This command prints out verbose information
about the named files.
.SH EXAMPLES
.de BX
.PP
.nf
.in +0.5i
..
.de EX
.fi
.PP
..
To get a file for editing,
edit it,
and produce a new delta:
.BX
sccs get \-e file.c
ex file.c
sccs delta file.c
.EX
To get a file from another directory:
.BX
sccs \-p/usr/src/sccs/s. get cc.c
.EX
or
.BX
sccs get /usr/src/sccs/s.cc.c
.EX
To make a delta of a large number of files
in the current directory:
.BX
sccs delta *.c
.EX
To get a list of files being edited that are not on branches:
.BX
sccs info \-b
.EX
To delta everything being edited by you:
.BX
sccs delta \`sccs tell \-u\`
.EX
.SH "SEE ALSO"
admin(1),
comb(1),
delta(1),
get(1),
help(1),
prs(1),
rmdel(1),
sccsdiff(1),
what(1)
.br
Eric Allman,
.ul
An Introduction to the Source Code Control System
